{"version":3,"sources":["components/Switch/Switch.js","actions/entityAction.js","components/AutoComplete/AutoComplete.js","components/Contacts/ContactForm/ContactForm.js","views/Pages/Contacts/Contact.js"],"names":["react_switch__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react_switch__WEBPACK_IMPORTED_MODULE_0___default","n","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","RadioBtn","props","a","createElement","checked","ischeked","onChange","willChange","onColor","onHandleColor","handleDiameter","uncheckedIcon","checkedIcon","boxShadow","activeBoxShadow","height","width","name","className","d","__webpack_exports__","getSelectedEntityRequest","getCompanyNameList","addNewContactRequest","_constants_actionTypes__WEBPACK_IMPORTED_MODULE_0__","entityID","type","types","formData","AutoCompleteText","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onTextChange","e","value","target","list","setNames","console","log","suggestions","length","regex","RegExp","concat","sort","filter","v","test","setState","text","items","state","obj","map","push","id","companyId","_this2","react_default","item","i","key","onClick","suggestionSelectedValue","placeholder","renderSuggestions","React","Component","ContactForm","handleSubmit","preventDefault","setform","firstName","lastName","position","businessEmail","personalEmail","businessPhone","mobilePhone","skype","whatsApp","homeAddress","note","isActive","createdBy","crmContactCompanies","crmContactCompanyProjects","leads","none","attemptedContact","contactFuture","contacted","junkedLead","lostLead","source","zoomInfo","google","likedIn","handleChange","bind","assertThisInitialized","onCompanChange","event","defineProperty","company","fname","toLowerCase","replace","toUpperCase","lname","address","pos","onSubmit","Row","Col","xs","FormGroup","Input","AutoComplete_AutoCompleteText","handleCompanyId","Switch","handleRadioStates","md","Button","color","onAddContact","Contact","columns","label","field","dropdownOpen","Array","fill","isModalActive","isInfo","toggle","modalToggle","onSubmitContact","newArray","element","index","modal","getCopanyNameList","style","addNewContact","sm","Card","CardHeader","size","outline","CardBody","mdbreact_esm","striped","bordered","hover","data","rows","contactName","isComponent","contactId","href","BusinessPhone","status","leadStatus","action","contactlist","Modal","isOpen","ModalHeader","ModalBody","Contacts_ContactForm_ContactForm","nameList","connect","store","entityReducer","dispatch"],"mappings":"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","file":"static/js/9.17ffa345.chunk.js","sourcesContent":["import Switch  from \"react-switch\";\r\nimport React from 'react'\r\n\r\nconst RadioBtn = (props) => {\r\n  return (\r\n    <Switch\r\n      checked={props.ischeked}\r\n      onChange={props.willChange}\r\n      onColor=\"#86d3ff\"\r\n      onHandleColor=\"#2693e6\"\r\n      handleDiameter={30}\r\n      uncheckedIcon={false}\r\n      checkedIcon={false}\r\n      boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n      activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n      height={20}\r\n      width={48}\r\n      name={props.RadioBtn}\r\n      className=\"react-switch crm-switch\"\r\n    />\r\n  )\r\n}\r\n\r\nexport default RadioBtn","import * as types from '../constants/actionTypes';\r\n\r\nexport const getSelectedEntityRequest = (entityID) => ({\r\n    type: types.GET_ENTITY_REQUEST,\r\n    entityID\r\n});\r\n\r\nexport const getCompanyNameList = (entityID) => ({\r\n    type: types.GET_NAME_LIST_REQUEST,\r\n    entityID\r\n});\r\n\r\nexport const addNewContactRequest = (formData) => ({\r\n    type: types.ADD_CONTACT_REQUEST,\r\n    formData\r\n})","import React from 'react'\r\n\r\nexport default class AutoCompleteText extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.items = this.props.list \r\n        this.state = {\r\n            suggestions: [],\r\n            text: ''\r\n        }\r\n    }\r\n\r\n    setNames(obj) {\r\n        let list = []\r\n        obj.map((value) => {\r\n            list.push(value.name)\r\n        })\r\n        return list\r\n    }\r\n\r\n    onTextChange = (e) =>{\r\n       const value = e.target.value\r\n       const list = this.setNames(this.props.list)\r\n\r\n        console.log(this.props.list[0])\r\n\r\n       let suggestions = []\r\n       if(value.length > 0) {\r\n            const regex = new RegExp(`${value}`, 'i');\r\n            suggestions = list.sort().filter(v => regex.test(v));\r\n       }\r\n       this.setState(() => ({ suggestions, text: value }))\r\n       this.props.value(value)\r\n    }\r\n\r\n    suggestionSelectedValue (value, id) {\r\n        this.setState(() => ({\r\n            text: value,\r\n            suggestions: []\r\n        }))\r\n        this.props.value(value)\r\n        this.props.companyId(id)\r\n    }\r\n\r\n    renderSuggestions() {\r\n        const { suggestions } = this.state\r\n        if(suggestions.length === 0){\r\n            return null\r\n        }\r\n\r\n        console.log(suggestions)\r\n        return (\r\n            <ul className=\"crm-linked-style\">\r\n                {suggestions.map((item, i) => <li className=\"crm-linked-list\" key={i} onClick={() => this.suggestionSelectedValue(item, item)}> {item} </li>)}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const {text} = this.state\r\n        return (\r\n            <div>\r\n                <input type=\"text\" className=\"form-control\" placeholder={this.props.placeholder} onChange={this.onTextChange} value={text || ''}/>  \r\n                 {this.renderSuggestions()}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","\r\nimport React from 'react'\r\nimport RadioBtn from \"../../Switch/Switch\"\r\n\r\nimport {\r\n  Col,\r\n  Row,\r\n  FormGroup, Input, Button\r\n} from 'reactstrap';\r\nimport AutoCompleteText from '../../AutoComplete/AutoComplete';\r\n \r\nclass ContactForm extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        position: \"\",\r\n        businessEmail: \"\",\r\n        personalEmail: \"\",\r\n        businessPhone: \"\",\r\n        mobilePhone: \"\",\r\n        skype: \"\",\r\n        whatsApp: \"\",\r\n        homeAddress: \"\",\r\n        note: \"\",\r\n        isActive: true,\r\n        createdBy: 0,\r\n        crmContactCompanies: [],\r\n        crmContactCompanyProjects: []  \r\n    }\r\n\r\n    this.leads = {\r\n        none: false, \r\n        attemptedContact: false, \r\n        contactFuture: false, \r\n        contacted: false, \r\n        junkedLead:false, \r\n        lostLead: false\r\n    }\r\n\r\n    this.source = {\r\n        zoomInfo: false, \r\n        google: false, \r\n        likedIn: false    \r\n    }\r\n\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.onCompanChange = this.onCompanChange.bind(this)\r\n    this.handleSubmit = this.handleSubmit.bind(this)\r\n    // this.handleRadioStates = this.handleRadioStates.bind(this)\r\n}\r\n\r\nhandleChange(event) {\r\n    const name =  event.target.name\r\n    this.setState({[name]: event.target.value})\r\n}\r\n\r\nhandleRadioStates (event) {\r\n    this.setState(event)\r\n}\r\n\r\nonCompanChange(e){\r\n    this.setState({company: e})\r\n}\r\n\r\nhandleCompanyId(id){\r\n    console.log(id)\r\n}\r\n\r\nhandleSubmit = (e) => {\r\n    e.preventDefault()\r\n    // create restriction here before submit\r\n    this.props.setform(this.state)\r\n}\r\n\r\nrender() {\r\n    let \r\n        fname = this.state.firstName.toLowerCase().replace(/(?<= )[^\\s]|^./g, a=>a.toUpperCase()),\r\n        lname = this.state.lastName.toLowerCase().replace(/(?<= )[^\\s]|^./g, a=>a.toUpperCase()),\r\n        address = this.state.homeAddress.toLowerCase().replace(/(?<= )[^\\s]|^./g, a=>a.toUpperCase()),\r\n        pos = this.state.position.toUpperCase()\r\n\r\n\treturn (\r\n        <div> \r\n            <form onSubmit={this.handleSubmit}>\r\n                <Row>\r\n                    <Col xs=\"6\">\r\n                        <FormGroup>\r\n                            <Input type=\"text\" name=\"firstName\" placeholder=\"First Name\" value={fname} onChange={this.handleChange}/>\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col xs=\"6\">\r\n                        <FormGroup>\r\n                            <Input type=\"text\" name=\"lastName\" placeholder=\"Last Name\" value={lname} onChange={this.handleChange} />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col xs=\"12\">\r\n                        <FormGroup>\r\n                            <Input type=\"text\" name=\"position\" placeholder=\"Position\" value={pos} onChange={this.handleChange} />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col xs=\"6\">\r\n                        <FormGroup>\r\n                            <Input type=\"email\" name=\"businessEmail\" placeholder=\"Business Email\" value={this.state.businessEmail} onChange={this.handleChange} />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col xs=\"6\">\r\n                        <FormGroup>\r\n                            <Input type=\"email\" name=\"personalEmail\" placeholder=\"Personal Email\" value={this.state.personalEmail} onChange={this.handleChange} />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col xs=\"6\">\r\n                        <FormGroup>\r\n                            <Input type=\"number\" name=\"businessPhone\" placeholder=\"Business Phone\" value={this.state.businessPhone} onChange={this.handleChange} />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col xs=\"6\">\r\n                        <FormGroup>\r\n                            <Input type=\"number\" name=\"mobilePhone\" placeholder=\"Mobile Phone\" value={this.state.mobilePhone} onChange={this.handleChange} />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col xs=\"6\">\r\n                        <FormGroup>\r\n                            <Input type=\"text\" name=\"skype\" placeholder=\"Skype\" value={this.state.skype} onChange={this.handleChange} />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col xs=\"6\">\r\n                        <FormGroup>\r\n                            <Input type=\"text\" name=\"whatsApp\" placeholder=\"What's App\" value={this.state.whatsApp} onChange={this.handleChange} />\r\n                        </FormGroup>\r\n                    </Col> \r\n                    <Col xs=\"12\">\r\n                        <FormGroup>\r\n                            <AutoCompleteText value={this.onCompanChange} companyId={this.handleCompanyId} placeholder={'Company'} list={this.props.list}/>\r\n                        </FormGroup>\r\n                    </Col>   \r\n                    <Col xs=\"12\">\r\n                        <FormGroup>\r\n                            <Input type=\"text\" name=\"homeAddress\" placeholder=\"Home Address\" value={address} onChange={this.handleChange} />\r\n                        </FormGroup>\r\n                    </Col>        \r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12}>\r\n                        <div className=\"form-group\">\r\n                            <h4> Lead Status </h4>\r\n                            <div  className=\"row\">\r\n                                <div className=\"col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                    <RadioBtn \r\n                                        ischeked={this.leads.none} \r\n                                        willChange={(e) => {this.handleRadioStates({none: !this.leads.none})}}\r\n                                    />\r\n                                    <span className=\"crm-label\"> None </span>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                    <RadioBtn \r\n                                        ischeked={this.leads.attemptedContact} \r\n                                        willChange={(e) => {this.handleRadioStates({attemptedContact: !this.leads.attemptedContact})}}\r\n                                    />\r\n                                    <span className=\"crm-label\"> Attempted Contact </span>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                    <RadioBtn \r\n                                        ischeked={this.leads.contactFuture} \r\n                                        willChange={(e) => {this.handleRadioStates({contactFuture: !this.leads.contactFuture})}}\r\n                                    />\r\n                                    <span className=\"crm-label\"> Contact in the Future </span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <RadioBtn \r\n                                            ischeked={this.leads.contacted } \r\n                                            willChange={(e) => {this.handleRadioStates({contacted: !this.leads.contacted})}}\r\n                                        />\r\n                                        <span className=\"crm-label\"> Contacted </span>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <RadioBtn \r\n                                            ischeked={this.leads.junkedLead} \r\n                                            willChange={(e) => {this.handleRadioStates({junkedLead : !this.leads.junkedLead})}}\r\n                                        />\r\n                                        <span className=\"crm-label\"> Junked Lead </span>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <RadioBtn \r\n                                            ischeked={this.leads.lostLead || false} \r\n                                            willChange={(e) => {this.handleRadioStates({lostLead : !this.leads.lostLead})}}\r\n                                        />\r\n                                        <span>Lost Lead </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12}>\r\n                        <div className=\"form-group\">\r\n                            <h4> Lead Source </h4>\r\n                            <div  className=\"row\">\r\n                                <div className=\"col-md-4\">\r\n                                    <div className=\"form-group\">\r\n                                        <RadioBtn \r\n                                            ischeked={this.source.zoomInfo} \r\n                                            willChange={(e) => {this.handleRadioStates({zoomInfo : !this.source.zoomInfo})}}\r\n                                        />\r\n                                        <span className=\"crm-label\"> Zoominfo </span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-4\">\r\n                                    <div className=\"form-group\">\r\n                                        <RadioBtn \r\n                                            ischeked={this.source.google} \r\n                                            willChange={(e) => {this.handleRadioStates({google : !this.source.google})}}\r\n                                        />\r\n                                        <span className=\"crm-label\"> Google </span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-4\">\r\n                                    <div className=\"form-group\">\r\n                                        <RadioBtn \r\n                                            ischeked={this.source.likedIn} \r\n                                            willChange={(e) => {this.handleRadioStates({likedIn : !this.source.likedIn})}}\r\n                                        />\r\n                                        <span className=\"crm-label\"> Linked In </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs=\"12\">\r\n                        <FormGroup>\r\n                            <Input type=\"textarea\" name=\"\" placeholder=\"Add a note\" value={this.state.note} onChange={this.handleChange} name=\"note\"/>\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={12} className=\"text-right\">    \r\n                        <Button color=\"primary\" className=\"crm-btn\"> Submit </Button>\r\n                        <Button color=\"secondary\" className=\"crm-btn\" onClick={this.props.onAddContact}> Cancel </Button>\r\n                    </Col>\r\n                </Row>\r\n            </form>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ContactForm;","import React from 'react';\r\nimport { MDBDataTable } from 'mdbreact';\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    Col,\r\n    Row,\r\n    Modal, ModalBody, ModalHeader\r\n  } from 'reactstrap';\r\n\r\nimport ContactForm from '../../../components/Contacts/ContactForm/ContactForm'\r\nimport { getCompanyNameList, addNewContactRequest } from '../../../actions/entityAction';\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { throwStatement } from '@babel/types';\r\n\r\n\r\n\r\nclass Contact extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.list = {\r\n            columns:\r\n                [\r\n                    {\r\n                        label: 'Name',\r\n                        field: 'contactName',\r\n                        sort:  'asc',\r\n                        width: 150\r\n                    },\r\n                    {\r\n                        label: 'Address',\r\n                        field: 'address',\r\n                        sort: 'asc',\r\n                        width: 270\r\n                    },\r\n                    {\r\n                        label: 'Business Email',\r\n                        field: 'businessEmail',\r\n                        sort: 'asc',\r\n                        width: 100\r\n                    },\r\n                    {\r\n                        label: 'Personal Email',\r\n                        field: 'personalEmail',\r\n                        sort: 'asc',\r\n                        width: 150\r\n                    },\r\n                    {\r\n                        label: 'Mobile Phone',\r\n                        field: 'mobilePhone',\r\n                        sort: 'asc',\r\n                        width: 100\r\n                    },\r\n                    {\r\n                        label: 'Business Phone',\r\n                        field: 'BusinessPhone',\r\n                        sort: 'asc',\r\n                        width: 100\r\n                    },\r\n                    {\r\n                        label: 'Lead Status',\r\n                        field: 'status',\r\n                        sort: 'asc',\r\n                        width: 100\r\n                    },\r\n                    {\r\n                        label: '',\r\n                        field: 'action',\r\n                        sort: 'asc',\r\n                        width: 100\r\n                    }\r\n                ]\r\n        }\r\n        this.state = {\r\n            dropdownOpen: new Array(19).fill(false),\r\n            isModalActive: false,\r\n            isInfo: false\r\n        }\r\n        \r\n        this.toggle = this.toggle.bind(this);\r\n        this.modalToggle = this.modalToggle.bind(this)\r\n        this.onSubmitContact = this.onSubmitContact.bind(this)\r\n    }\r\n\r\n    toggle(i) {\r\n        const newArray = this.state.dropdownOpen.map((element, index) => { return (index === i ? !element : false); });\r\n        this.setState({\r\n            dropdownOpen: newArray,\r\n        });\r\n    }\r\n\r\n    modalToggle(i){\r\n        this.setState({\r\n            modal: !this.state.modal,\r\n        });\r\n\r\n        this.setState({isModalActive: !this.state.isModalActive})\r\n        if(!this.state.isModalActive){\r\n            this.props.getCopanyNameList(1)\r\n        }\r\n    }\r\n\r\n\r\n    rowProfile(event) {\r\n        console.log(event)\r\n        const info = {contact_name:'John Doe', email:'john_@yahoo.com', address:'Davao city', phone:'09079242092', owner:'Admin'}\r\n        return (\r\n            <div className=\"crm_profile_modal\" style={{'position': \"absolute\"}}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\"> \r\n                        <div className=\"form-group\">\r\n                            <i className=\"fa fa-user\"></i>\r\n                            <label> info.contact_name </label>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <i className=\"fa fa-mail\"></i>\r\n                            <label> info.email</label>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <i className=\"fa fa-map\"></i>\r\n                            <label> info.address </label>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <i className=\"fa fa-phone\"></i>\r\n                            <label> info.number </label>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <i className=\"fa fa-plus\"></i>\r\n                            <label> Tag </label>\r\n                        </div> \r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <label>{info.owner}</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onSubmitContact(formData) {\r\n        // console.clear()\r\n        // const {crmContactCompanies,crmContactCompanyProjects,dateCreated,ateUpdated,isActive,  ...rest} = formData\r\n        this.props.addNewContact(formData)\r\n\r\n        this.setState({\r\n            modal: !this.state.modal,\r\n        });        \r\n    }\r\n\r\n    render () {\r\n        const contactlist = () => {\r\n            const data = this.props.data || []\r\n            // console.log(data);\r\n            const list = {\r\n                columns: this.list.columns,\r\n                rows: []\r\n            }\r\n            let item = []\r\n            if(data.length >= 1){\r\n                data.map((obj, i) => {\r\n                    item = {\r\n                        contactName: (<div className=\"crm-profile-link\" onClick={() => this.props.isComponent(obj.contactId)}> {obj.firstName}  {obj.lastName}  </div>),\r\n                        address: obj.homeAddress,\r\n                        businessEmail:  obj.businessEmail,\r\n                        personalEmail:  obj.personalEmail,\r\n                        mobilePhone: (<a href={'tel:'+ obj.mobilePhone} > {obj.mobilePhone} </a>),\r\n                        BusinessPhone: (<a href={'tel:'+ obj.businessPhone} > {obj.businessPhone} </a>),\r\n                        status: obj.leadStatus,\r\n                        action: (\r\n                            <div className=\"form-inline \">\r\n                                <i className=\"fas fa-pencil-alt crm_btn_table\" ></i>  \r\n                                <i className=\"fas fa-trash-alt crm_btn_table\" ></i>  \r\n                            </div>\r\n                        )\r\n                    }\r\n    \r\n                    list.rows.push(item)\r\n                })  \r\n            }\r\n            return list\r\n        }\r\n\r\n        return (\r\n            <div className=\"animated fadeIn\">\r\n                <Row>\r\n                    <Col xs=\"12\" sm=\"12\">\r\n                        <Card>\r\n                        <CardHeader>\r\n                            <strong> Contact List </strong>\r\n                            <small> </small>\r\n                            <div className=\"crm-contact-options\"> \r\n                                <div className=\"form-inline\">\r\n                                    <Button size=\"md\" className=\"btn-brand mr-1 mb-1\" onClick={this.modalToggle}><i className=\" fa fa-plus\"></i><span> Add Contacts </span></Button>\r\n                                    <Button outline className=\"mr-1 mb-1\" color=\"primary\">Export</Button>\r\n                                </div>                            \r\n                            </div>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                            <MDBDataTable\r\n                                striped\r\n                                bordered\r\n                                hover\r\n                                data={contactlist() || []}\r\n                            />\r\n                        </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                \r\n                <Modal isOpen={this.state.modal} toggle={this.modalToggle} className={'modal-md ' + this.props.className}>\r\n                  <ModalHeader toggle={this.modalToggle}> <i className=\"fa fa-phone\"> </i> New Contact </ModalHeader>\r\n                  <ModalBody>\r\n                        <ContactForm \r\n                            list={this.props.nameList} \r\n                            setform={this.onSubmitContact} \r\n                            onAddContact={this.modalToggle}\r\n                        />\r\n                  </ModalBody>\r\n                </Modal>\r\n        \r\n            </div> \r\n        )\r\n    }\r\n} \r\n\r\nconst mapStateToProps = (store) => {\r\n    return {\r\n        nameList: store.entityReducer.list\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getCopanyNameList: data => dispatch(getCompanyNameList(data)),\r\n    addNewContact: data => dispatch(addNewContactRequest(data))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contact)"],"sourceRoot":""}