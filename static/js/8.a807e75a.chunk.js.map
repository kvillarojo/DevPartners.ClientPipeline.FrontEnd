{"version":3,"sources":["components/Switch/Switch.js","actions/entityAction.js","views/Pages/Contacts/ContactProfile.js","components/AutoComplete/AutoComplete.js","components/Contacts/ContactForm/ContactForm.js","views/Pages/Contacts/Contact.js","views/Pages/Contacts/index.js"],"names":["react_switch__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react_switch__WEBPACK_IMPORTED_MODULE_0___default","n","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","RadioBtn","props","a","createElement","checked","ischeked","onChange","willChange","onColor","onHandleColor","handleDiameter","uncheckedIcon","checkedIcon","boxShadow","activeBoxShadow","height","width","name","className","d","__webpack_exports__","getSelectedEntityRequest","getCompanyNameList","addNewContactRequest","_constants_actionTypes__WEBPACK_IMPORTED_MODULE_0__","entityID","type","types","formData","ContactProfile","_this","Object","C_projects_devPartners_DevPartner_Clientpipeline_frontEnd_ClientApp_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_projects_devPartners_DevPartner_Clientpipeline_frontEnd_ClientApp_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_projects_devPartners_DevPartner_Clientpipeline_frontEnd_ClientApp_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","notes","react__WEBPACK_IMPORTED_MODULE_6___default","Fragment","noteList","timeline","reactstrap__WEBPACK_IMPORTED_MODULE_7__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","md","profile","dateCreated","dateUpdated","note","toggle","tabPane","tab","newArray","state","activeTab","slice","setState","reactstrap__WEBPACK_IMPORTED_MODULE_9__","tabId","Array","fill","bind","C_projects_devPartners_DevPartner_Clientpipeline_frontEnd_ClientApp_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__","_this2","console","log","contactName","firstName","lastName","onClick","isComponent","undefined","xs","sm","reactstrap__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","react_avatar__WEBPACK_IMPORTED_MODULE_17__","round","size","position","company","leadStatus","reactstrap__WEBPACK_IMPORTED_MODULE_12__","createdBy","href","concat","businessPhone","mobilePhone","personalEmail","businessEmail","homeAddress","reactstrap__WEBPACK_IMPORTED_MODULE_13__","tabs","reactstrap__WEBPACK_IMPORTED_MODULE_14__","reactstrap__WEBPACK_IMPORTED_MODULE_15__","active","reactstrap__WEBPACK_IMPORTED_MODULE_16__","React","Component","AutoCompleteText","classCallCheck","possibleConstructorReturn","getPrototypeOf","onTextChange","e","value","target","list","setNames","suggestions","length","regex","RegExp","sort","filter","v","test","text","items","obj","map","push","id","companyId","react_default","item","i","key","suggestionSelectedValue","placeholder","renderSuggestions","ContactForm","handleSubmit","preventDefault","setform","skype","whatsApp","isActive","crmContactCompanies","crmContactCompanyProjects","leads","none","attemptedContact","contactFuture","contacted","junkedLead","lostLead","source","zoomInfo","google","likedIn","handleChange","assertThisInitialized","onCompanChange","event","defineProperty","fname","toLowerCase","replace","toUpperCase","lname","address","pos","onSubmit","Row","Col","FormGroup","Input","AutoComplete_AutoCompleteText","handleCompanyId","Switch","handleRadioStates","Button","color","onAddContact","Contact","columns","label","field","dropdownOpen","isModalActive","isInfo","modalToggle","onSubmitContact","element","index","modal","getCopanyNameList","style","addNewContact","Card","CardHeader","outline","CardBody","mdbreact_esm","striped","bordered","hover","data","rows","contactId","BusinessPhone","status","action","contactlist","Modal","isOpen","ModalHeader","ModalBody","Contacts_ContactForm_ContactForm","nameList","connect","store","entityReducer","dispatch","R","require","updateComponentToLoad","eventID","activeComponent","getProfile","hasID","propEq","profileData","setProfileData","componentToLoad","_Contact__WEBPACK_IMPORTED_MODULE_9__","_ContactProfile__WEBPACK_IMPORTED_MODULE_10__","getContactList"],"mappings":"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","file":"static/js/8.a807e75a.chunk.js","sourcesContent":["import Switch  from \"react-switch\";\r\nimport React from 'react'\r\n\r\nconst RadioBtn = (props) => {\r\n  return (\r\n    <Switch\r\n      checked={props.ischeked}\r\n      onChange={props.willChange}\r\n      onColor=\"#86d3ff\"\r\n      onHandleColor=\"#2693e6\"\r\n      handleDiameter={30}\r\n      uncheckedIcon={false}\r\n      checkedIcon={false}\r\n      boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n      activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n      height={20}\r\n      width={48}\r\n      name={props.RadioBtn}\r\n      className=\"react-switch crm-switch\"\r\n    />\r\n  )\r\n}\r\n\r\nexport default RadioBtn","import * as types from '../constants/actionTypes';\r\n\r\nexport const getSelectedEntityRequest = (entityID) => ({\r\n    type: types.GET_ENTITY_REQUEST,\r\n    entityID\r\n});\r\n\r\nexport const getCompanyNameList = (entityID) => ({\r\n    type: types.GET_NAME_LIST_REQUEST,\r\n    entityID\r\n});\r\n\r\nexport const addNewContactRequest = (formData) => ({\r\n    type: types.ADD_CONTACT_REQUEST,\r\n    formData\r\n})","import React from 'react';\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    Col,\r\n    Row,\r\n    Nav, NavItem, NavLink, TabPane, TabContent\r\n  } from 'reactstrap';\r\n\r\nimport Avatar from 'react-avatar';\r\n  \r\nclass ContactProfile extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n         \r\n        this.state = {\r\n            activeTab: new Array(2).fill('1'),\r\n        }\r\n       \r\n        this.toggle = this.toggle.bind(this);\r\n    }\r\n\r\n    notes = () => {\r\n        // return 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit.'\r\n        return (\r\n            <>\r\n                <div className=\"crm-tab-options text-right\"> \r\n                    <i className=\"fa fa-plus-circle\"> </i>\r\n                </div>\r\n                <div className=\"crm-note-list\">\r\n                    {this.noteList()}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    timeline = () => {\r\n        return ( \r\n            <Row>\r\n                <Col md={6}>\r\n                    <div className=\"form-inline\"> \r\n                        <label className=\"crm-label\"> Created: </label>\r\n                        <span> {this.props.profile.dateCreated} </span>\r\n                    </div>\r\n                </Col>\r\n                <Col md={6}>\r\n                    <div className=\"form-inline\"> \r\n                        <label className=\"crm-label\"> Last updated: </label>\r\n                        <span>  {this.props.profile.dateUpdated} </span>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    } \r\n    noteList = () => {\r\n        const note = this.props.profile.note\r\n        \r\n        if(note){\r\n            return ( <p>{note}</p> )\r\n        }else{\r\n            return ( <span className=\"crm-empty-label\">Empty...</span> )\r\n        }\r\n    } \r\n\r\n    toggle = (tabPane, tab) => {\r\n        const newArray = this.state.activeTab.slice()\r\n        newArray[tabPane] = tab\r\n        this.setState({\r\n          activeTab: newArray,\r\n        });\r\n    }\r\n    \r\n    tabPane = () => {\r\n        return (\r\n          <>\r\n            <TabPane tabId=\"1\">\r\n              { this.timeline() }        \r\n            </TabPane>\r\n            <TabPane tabId=\"2\">\r\n              { this.notes() }        \r\n            </TabPane>\r\n          </>\r\n        );\r\n    }\r\n\r\n    render () {\r\n        // console.log(this.props)\r\n        const n = this.props.profile\r\n        console.log(this.props)\r\n        const contactName = n.firstName + ' ' + n.lastName\r\n\r\n        return (\r\n            <>    \r\n                <span  className=\"fa fa-arrow-left\" onClick={() => this.props.isComponent(undefined)}></span> \r\n                <div className=\"animated fadeIn\">\r\n                    <Row>\r\n                        <Col xs=\"3\" sm=\"3\">\r\n                            <Card>\r\n                            <CardHeader>\r\n                                <span className=\"fa fa-pencil crm-profule-update\"></span>\r\n                                <div className=\"crm-profile-pic\">\r\n                                    <Avatar \r\n                                        name={contactName}\r\n                                        round=\"90px\"\r\n                                        size={125}\r\n                                    />\r\n                                    <div className=\"crm-container-topName \">\r\n                                    <h2> {contactName} </h2>\r\n                                    </div>\r\n                                    <span> {n.position} </span>    \r\n                                    <br/>\r\n                                    <h4> {n.company} </h4>     \r\n                                </div>\r\n                                <hr/>\r\n                                <div className=\"crm-profile-status red\">\r\n                                    <span className=\"crm-label\"> Lead Status: </span> {n.leadStatus}\r\n                                </div>\r\n                            </CardHeader>\r\n                            <CardBody>\r\n                                <div className=\"form-inline\">\r\n                                    <span className=\"crm-label\">\r\n                                        Owner: \r\n                                    </span>\r\n                                    {n.createdBy}\r\n                                </div>\r\n                                <hr/>\r\n                                <div className=\"form-group\">\r\n                                    <h4>\r\n                                        Tags\r\n                                    </h4>\r\n                                    <div className=\"crm-tag-list\">\r\n                                        <span className=\"fa fa-plus-circle crm-label\"> tag </span>\r\n                                    </div> \r\n                                </div>\r\n                                <h4 >\r\n                                    Contact Information\r\n                                </h4>\r\n                                <Row>\r\n                                    <Col md={6}>\r\n                                        <div className=\"form-group\">\r\n                                            <span className=\"crm-label\">\r\n                                                Business Phone #:\r\n                                            </span>\r\n                                            <br/>\r\n                                            <label> <a href={`tel:${n.businessPhone}`}>  {n.businessPhone} </a> </label>\r\n                                        </div>\r\n                                    </Col>\r\n                                    <Col md={6}>\r\n                                        <div className=\"form-group\">\r\n                                            <span className=\"crm-label\">\r\n                                                Personal Phone #:\r\n                                            </span>\r\n                                            <br/>\r\n                                            <label> <a href={`tel:${n.mobilePhone}`}>  {n.mobilePhone} </a> </label>\r\n                                        </div>\r\n                                    </Col>                       \r\n                                </Row>\r\n                                <div className=\"form-group\">\r\n                                    <span className=\"crm-label\">\r\n                                        Business Email\r\n                                    </span>\r\n                                    <br/>\r\n                                    <label> <a href={`mailto:`+ n.personalEmail}> {n.personalEmail} </a></label>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <span className=\"crm-label\">\r\n                                        Personal Email\r\n                                    </span>\r\n                                    <br/>\r\n                                    <label> <a href={`mailto:`+ n.businessEmail}> {n.businessEmail} </a></label>\r\n                                </div>\r\n                                <h4 >\r\n                                    Address\r\n                                </h4>\r\n                                <div className=\"form-group\">\r\n                                    <p>  {n.homeAddress} </p>\r\n                                </div>\r\n                            </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col xs=\"9\" sm=\"9\">\r\n                            <Nav tabs>\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        active={this.state.activeTab[0] === '1'}\r\n                                        onClick={() => { this.toggle(0, '1'); }}\r\n                                        >\r\n                                        Timeline\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        active={this.state.activeTab[0] === '2'}\r\n                                        onClick={() => { this.toggle(0, '2'); }}\r\n                                        >\r\n                                        Notes\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <TabContent activeTab={this.state.activeTab[0]}>\r\n                                {this.tabPane()}\r\n                            </TabContent>\r\n                        </Col>\r\n                    </Row>\r\n                </div> \r\n            </>\r\n        )\r\n    }\r\n} \r\n\r\n \r\nexport default ContactProfile","import React from 'react'\r\n\r\nexport default class AutoCompleteText extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.items = this.props.list \r\n        this.state = {\r\n            suggestions: [],\r\n            text: ''\r\n        }\r\n    }\r\n\r\n    setNames(obj) {\r\n        let list = []\r\n        obj.map((value) => {\r\n            list.push(value.name)\r\n        })\r\n        return list\r\n    }\r\n\r\n    onTextChange = (e) =>{\r\n       const value = e.target.value\r\n       const list = this.setNames(this.props.list)\r\n\r\n        console.log(this.props.list[0])\r\n\r\n       let suggestions = []\r\n       if(value.length > 0) {\r\n            const regex = new RegExp(`${value}`, 'i');\r\n            suggestions = list.sort().filter(v => regex.test(v));\r\n       }\r\n       this.setState(() => ({ suggestions, text: value }))\r\n       this.props.value(value)\r\n    }\r\n\r\n    suggestionSelectedValue (value, id) {\r\n        this.setState(() => ({\r\n            text: value,\r\n            suggestions: []\r\n        }))\r\n        this.props.value(value)\r\n        this.props.companyId(id)\r\n    }\r\n\r\n    renderSuggestions() {\r\n        const { suggestions } = this.state\r\n        if(suggestions.length === 0){\r\n            return null\r\n        }\r\n\r\n        console.log(suggestions)\r\n        return (\r\n            <ul className=\"crm-linked-style\">\r\n                {suggestions.map((item, i) => <li className=\"crm-linked-list\" key={i} onClick={() => this.suggestionSelectedValue(item, item)}> {item} </li>)}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const {text} = this.state\r\n        return (\r\n            <div>\r\n                <input type=\"text\" className=\"form-control\" placeholder={this.props.placeholder} onChange={this.onTextChange} value={text || ''}/>  \r\n                 {this.renderSuggestions()}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","\r\nimport React from 'react'\r\nimport RadioBtn from \"../../Switch/Switch\"\r\n\r\nimport {\r\n  Col,\r\n  Row,\r\n  FormGroup, Input, Button\r\n} from 'reactstrap';\r\nimport AutoCompleteText from '../../AutoComplete/AutoComplete';\r\n \r\nclass ContactForm extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        position: \"\",\r\n        businessEmail: \"\",\r\n        personalEmail: \"\",\r\n        businessPhone: \"\",\r\n        mobilePhone: \"\",\r\n        skype: \"\",\r\n        whatsApp: \"\",\r\n        homeAddress: \"\",\r\n        note: \"\",\r\n        isActive: true,\r\n        createdBy: 0,\r\n        crmContactCompanies: [],\r\n        crmContactCompanyProjects: []  \r\n    }\r\n\r\n    this.leads = {\r\n        none: false, \r\n        attemptedContact: false, \r\n        contactFuture: false, \r\n        contacted: false, \r\n        junkedLead:false, \r\n        lostLead: false\r\n    }\r\n\r\n    this.source = {\r\n        zoomInfo: false, \r\n        google: false, \r\n        likedIn: false    \r\n    }\r\n\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.onCompanChange = this.onCompanChange.bind(this)\r\n    this.handleSubmit = this.handleSubmit.bind(this)\r\n    // this.handleRadioStates = this.handleRadioStates.bind(this)\r\n}\r\n\r\nhandleChange(event) {\r\n    const name =  event.target.name\r\n    this.setState({[name]: event.target.value})\r\n}\r\n\r\nhandleRadioStates (event) {\r\n    this.setState(event)\r\n}\r\n\r\nonCompanChange(e){\r\n    this.setState({company: e})\r\n}\r\n\r\nhandleCompanyId(id){\r\n    console.log(id)\r\n}\r\n\r\nhandleSubmit = (e) => {\r\n    e.preventDefault()\r\n    // create restriction here before submit\r\n    this.props.setform(this.state)\r\n}\r\n\r\nrender() {\r\n    let \r\n        fname = this.state.firstName.toLowerCase().replace(/(?<= )[^\\s]|^./g, a=>a.toUpperCase()),\r\n        lname = this.state.lastName.toLowerCase().replace(/(?<= )[^\\s]|^./g, a=>a.toUpperCase()),\r\n        address = this.state.homeAddress.toLowerCase().replace(/(?<= )[^\\s]|^./g, a=>a.toUpperCase()),\r\n        pos = this.state.position.toUpperCase()\r\n\r\n\treturn (\r\n        <div> \r\n            <form onSubmit={this.handleSubmit}>\r\n                <Row>\r\n                    <Col xs=\"6\">\r\n                        <FormGroup>\r\n                            <Input type=\"text\" name=\"firstName\" placeholder=\"First Name\" value={fname} onChange={this.handleChange}/>\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col xs=\"6\">\r\n                        <FormGroup>\r\n                            <Input type=\"text\" name=\"lastName\" placeholder=\"Last Name\" value={lname} onChange={this.handleChange} />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col xs=\"12\">\r\n                        <FormGroup>\r\n                            <Input type=\"text\" name=\"position\" placeholder=\"Position\" value={pos} onChange={this.handleChange} />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col xs=\"6\">\r\n                        <FormGroup>\r\n                            <Input type=\"email\" name=\"businessEmail\" placeholder=\"Business Email\" value={this.state.businessEmail} onChange={this.handleChange} />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col xs=\"6\">\r\n                        <FormGroup>\r\n                            <Input type=\"email\" name=\"personalEmail\" placeholder=\"Personal Email\" value={this.state.personalEmail} onChange={this.handleChange} />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col xs=\"6\">\r\n                        <FormGroup>\r\n                            <Input type=\"number\" name=\"businessPhone\" placeholder=\"Business Phone\" value={this.state.businessPhone} onChange={this.handleChange} />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col xs=\"6\">\r\n                        <FormGroup>\r\n                            <Input type=\"number\" name=\"mobilePhone\" placeholder=\"Mobile Phone\" value={this.state.mobilePhone} onChange={this.handleChange} />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col xs=\"6\">\r\n                        <FormGroup>\r\n                            <Input type=\"text\" name=\"skype\" placeholder=\"Skype\" value={this.state.skype} onChange={this.handleChange} />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col xs=\"6\">\r\n                        <FormGroup>\r\n                            <Input type=\"text\" name=\"whatsApp\" placeholder=\"What's App\" value={this.state.whatsApp} onChange={this.handleChange} />\r\n                        </FormGroup>\r\n                    </Col> \r\n                    <Col xs=\"12\">\r\n                        <FormGroup>\r\n                            <AutoCompleteText value={this.onCompanChange} companyId={this.handleCompanyId} placeholder={'Company'} list={this.props.list}/>\r\n                        </FormGroup>\r\n                    </Col>   \r\n                    <Col xs=\"12\">\r\n                        <FormGroup>\r\n                            <Input type=\"text\" name=\"homeAddress\" placeholder=\"Home Address\" value={address} onChange={this.handleChange} />\r\n                        </FormGroup>\r\n                    </Col>        \r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12}>\r\n                        <div className=\"form-group\">\r\n                            <h4> Lead Status </h4>\r\n                            <div  className=\"row\">\r\n                                <div className=\"col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                    <RadioBtn \r\n                                        ischeked={this.leads.none} \r\n                                        willChange={(e) => {this.handleRadioStates({none: !this.leads.none})}}\r\n                                    />\r\n                                    <span className=\"crm-label\"> None </span>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                    <RadioBtn \r\n                                        ischeked={this.leads.attemptedContact} \r\n                                        willChange={(e) => {this.handleRadioStates({attemptedContact: !this.leads.attemptedContact})}}\r\n                                    />\r\n                                    <span className=\"crm-label\"> Attempted Contact </span>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                    <RadioBtn \r\n                                        ischeked={this.leads.contactFuture} \r\n                                        willChange={(e) => {this.handleRadioStates({contactFuture: !this.leads.contactFuture})}}\r\n                                    />\r\n                                    <span className=\"crm-label\"> Contact in the Future </span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <RadioBtn \r\n                                            ischeked={this.leads.contacted } \r\n                                            willChange={(e) => {this.handleRadioStates({contacted: !this.leads.contacted})}}\r\n                                        />\r\n                                        <span className=\"crm-label\"> Contacted </span>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <RadioBtn \r\n                                            ischeked={this.leads.junkedLead} \r\n                                            willChange={(e) => {this.handleRadioStates({junkedLead : !this.leads.junkedLead})}}\r\n                                        />\r\n                                        <span className=\"crm-label\"> Junked Lead </span>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <RadioBtn \r\n                                            ischeked={this.leads.lostLead || false} \r\n                                            willChange={(e) => {this.handleRadioStates({lostLead : !this.leads.lostLead})}}\r\n                                        />\r\n                                        <span>Lost Lead </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12}>\r\n                        <div className=\"form-group\">\r\n                            <h4> Lead Source </h4>\r\n                            <div  className=\"row\">\r\n                                <div className=\"col-md-4\">\r\n                                    <div className=\"form-group\">\r\n                                        <RadioBtn \r\n                                            ischeked={this.source.zoomInfo} \r\n                                            willChange={(e) => {this.handleRadioStates({zoomInfo : !this.source.zoomInfo})}}\r\n                                        />\r\n                                        <span className=\"crm-label\"> Zoominfo </span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-4\">\r\n                                    <div className=\"form-group\">\r\n                                        <RadioBtn \r\n                                            ischeked={this.source.google} \r\n                                            willChange={(e) => {this.handleRadioStates({google : !this.source.google})}}\r\n                                        />\r\n                                        <span className=\"crm-label\"> Google </span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-4\">\r\n                                    <div className=\"form-group\">\r\n                                        <RadioBtn \r\n                                            ischeked={this.source.likedIn} \r\n                                            willChange={(e) => {this.handleRadioStates({likedIn : !this.source.likedIn})}}\r\n                                        />\r\n                                        <span className=\"crm-label\"> Linked In </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs=\"12\">\r\n                        <FormGroup>\r\n                            <Input type=\"textarea\" name=\"\" placeholder=\"Add a note\" value={this.state.note} onChange={this.handleChange} name=\"note\"/>\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={12} className=\"text-right\">    \r\n                        <Button color=\"primary\" className=\"crm-btn\"> Submit </Button>\r\n                        <Button color=\"secondary\" className=\"crm-btn\" onClick={this.props.onAddContact}> Cancel </Button>\r\n                    </Col>\r\n                </Row>\r\n            </form>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ContactForm;","import React from 'react';\r\nimport { MDBDataTable } from 'mdbreact';\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    Col,\r\n    Row,\r\n    Modal, ModalBody, ModalHeader\r\n  } from 'reactstrap';\r\n\r\nimport ContactForm from '../../../components/Contacts/ContactForm/ContactForm'\r\nimport { getCompanyNameList, addNewContactRequest } from '../../../actions/entityAction';\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { throwStatement } from '@babel/types';\r\n\r\n\r\n\r\nclass Contact extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.list = {\r\n            columns:\r\n                [\r\n                    {\r\n                        label: 'Name',\r\n                        field: 'contactName',\r\n                        sort:  'asc',\r\n                        width: 150\r\n                    },\r\n                    {\r\n                        label: 'Address',\r\n                        field: 'address',\r\n                        sort: 'asc',\r\n                        width: 270\r\n                    },\r\n                    {\r\n                        label: 'Business Email',\r\n                        field: 'businessEmail',\r\n                        sort: 'asc',\r\n                        width: 100\r\n                    },\r\n                    {\r\n                        label: 'Personal Email',\r\n                        field: 'personalEmail',\r\n                        sort: 'asc',\r\n                        width: 150\r\n                    },\r\n                    {\r\n                        label: 'Mobile Phone',\r\n                        field: 'mobilePhone',\r\n                        sort: 'asc',\r\n                        width: 100\r\n                    },\r\n                    {\r\n                        label: 'Business Phone',\r\n                        field: 'BusinessPhone',\r\n                        sort: 'asc',\r\n                        width: 100\r\n                    },\r\n                    {\r\n                        label: 'Lead Status',\r\n                        field: 'status',\r\n                        sort: 'asc',\r\n                        width: 100\r\n                    },\r\n                    {\r\n                        label: '',\r\n                        field: 'action',\r\n                        sort: 'asc',\r\n                        width: 100\r\n                    }\r\n                ]\r\n        }\r\n        this.state = {\r\n            dropdownOpen: new Array(19).fill(false),\r\n            isModalActive: false,\r\n            isInfo: false\r\n        }\r\n        \r\n        this.toggle = this.toggle.bind(this);\r\n        this.modalToggle = this.modalToggle.bind(this)\r\n        this.onSubmitContact = this.onSubmitContact.bind(this)\r\n    }\r\n\r\n    toggle(i) {\r\n        const newArray = this.state.dropdownOpen.map((element, index) => { return (index === i ? !element : false); });\r\n        this.setState({\r\n            dropdownOpen: newArray,\r\n        });\r\n    }\r\n\r\n    modalToggle(i){\r\n        this.setState({\r\n            modal: !this.state.modal,\r\n        });\r\n\r\n        this.setState({isModalActive: !this.state.isModalActive})\r\n        if(!this.state.isModalActive){\r\n            this.props.getCopanyNameList(1)\r\n        }\r\n    }\r\n\r\n\r\n    rowProfile(event) {\r\n        console.log(event)\r\n        const info = {contact_name:'John Doe', email:'john_@yahoo.com', address:'Davao city', phone:'09079242092', owner:'Admin'}\r\n        return (\r\n            <div className=\"crm_profile_modal\" style={{'position': \"absolute\"}}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\"> \r\n                        <div className=\"form-group\">\r\n                            <i className=\"fa fa-user\"></i>\r\n                            <label> info.contact_name </label>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <i className=\"fa fa-mail\"></i>\r\n                            <label> info.email</label>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <i className=\"fa fa-map\"></i>\r\n                            <label> info.address </label>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <i className=\"fa fa-phone\"></i>\r\n                            <label> info.number </label>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <i className=\"fa fa-plus\"></i>\r\n                            <label> Tag </label>\r\n                        </div> \r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <label>{info.owner}</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onSubmitContact(formData) {\r\n        // console.clear()\r\n        // const {crmContactCompanies,crmContactCompanyProjects,dateCreated,ateUpdated,isActive,  ...rest} = formData\r\n        this.props.addNewContact(formData)\r\n\r\n        this.setState({\r\n            modal: !this.state.modal,\r\n        });        \r\n    }\r\n\r\n    render () {\r\n        const contactlist = () => {\r\n            const data = this.props.data || []\r\n            // console.log(data);\r\n            const list = {\r\n                columns: this.list.columns,\r\n                rows: []\r\n            }\r\n            let item = []\r\n            if(data.length >= 1){\r\n                data.map((obj, i) => {\r\n                    item = {\r\n                        contactName: (<div className=\"crm-profile-link\" onClick={() => this.props.isComponent(obj.contactId)}> {obj.firstName}  {obj.lastName}  </div>),\r\n                        address: obj.homeAddress,\r\n                        businessEmail:  obj.businessEmail,\r\n                        personalEmail:  obj.personalEmail,\r\n                        mobilePhone: (<a href={'tel:'+ obj.mobilePhone} > {obj.mobilePhone} </a>),\r\n                        BusinessPhone: (<a href={'tel:'+ obj.businessPhone} > {obj.businessPhone} </a>),\r\n                        status: obj.leadStatus,\r\n                        action: (\r\n                            <div className=\"form-inline \">\r\n                                <i className=\"fas fa-pencil-alt crm_btn_table\" ></i>  \r\n                                <i className=\"fas fa-trash-alt crm_btn_table\" ></i>  \r\n                            </div>\r\n                        )\r\n                    }\r\n    \r\n                    list.rows.push(item)\r\n                })  \r\n            }\r\n            return list\r\n        }\r\n\r\n        return (\r\n            <div className=\"animated fadeIn\">\r\n                <Row>\r\n                    <Col xs=\"12\" sm=\"12\">\r\n                        <Card>\r\n                        <CardHeader>\r\n                            <strong> Contact List </strong>\r\n                            <small> </small>\r\n                            <div className=\"crm-contact-options\"> \r\n                                <div className=\"form-inline\">\r\n                                    <Button size=\"md\" className=\"btn-brand mr-1 mb-1\" onClick={this.modalToggle}><i className=\" fa fa-plus\"></i><span> Add Contacts </span></Button>\r\n                                    <Button outline className=\"mr-1 mb-1\" color=\"primary\">Export</Button>\r\n                                </div>                            \r\n                            </div>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                            <MDBDataTable\r\n                                striped\r\n                                bordered\r\n                                hover\r\n                                data={contactlist() || []}\r\n                            />\r\n                        </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                \r\n                <Modal isOpen={this.state.modal} toggle={this.modalToggle} className={'modal-md ' + this.props.className}>\r\n                  <ModalHeader toggle={this.modalToggle}> <i className=\"fa fa-phone\"> </i> New Contact </ModalHeader>\r\n                  <ModalBody>\r\n                        <ContactForm \r\n                            list={this.props.nameList} \r\n                            setform={this.onSubmitContact} \r\n                            onAddContact={this.modalToggle}\r\n                        />\r\n                  </ModalBody>\r\n                </Modal>\r\n        \r\n            </div> \r\n        )\r\n    }\r\n} \r\n\r\nconst mapStateToProps = (store) => {\r\n    return {\r\n        nameList: store.entityReducer.list\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getCopanyNameList: data => dispatch(getCompanyNameList(data)),\r\n    addNewContact: data => dispatch(addNewContactRequest(data))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contact)","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { getCompanyNameList, getSelectedEntityRequest } from '../../../actions/entityAction';\r\nimport Contact from './Contact';\r\nimport ContactProfile from './ContactProfile';\r\n\r\nconst R = require('ramda');\r\n\r\nclass index extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            activeComponent: true,\r\n            setProfileData: []\r\n        }\r\n        this.updateComponentToLoad = this.updateComponentToLoad.bind(this)\r\n    }\r\n\r\n    updateComponentToLoad = (eventID) => {\r\n        this.setState({activeComponent: !this.state.activeComponent})\r\n        if(eventID !== undefined){\r\n            this.getProfile(eventID)\r\n        }\r\n    }\r\n\r\n    getProfile = (id) => {\r\n        // console.clear(i)\r\n        console.log(id)\r\n        var hasID = R.propEq('contactId', id);\r\n        const profileData = R.filter(hasID)(this.props.data)\r\n        this.setState({setProfileData: profileData})\r\n    }\r\n\r\n    componentToLoad = () =>{\r\n        if(this.state.activeComponent){\r\n            return (\r\n                <Contact isComponent={this.updateComponentToLoad} data={this.props.data}/>\r\n            )\r\n        }else{\r\n            return (\r\n                <ContactProfile isComponent={this.updateComponentToLoad} profile={this.state.setProfileData[0]}/>\r\n            ) \r\n        }\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.props.getContactList()\r\n    }\r\n\r\n    render () {\r\n        \r\n        return (\r\n            <div>\r\n                {\r\n                    this.componentToLoad()\r\n                }\r\n            </div>      \r\n        )\r\n    }\r\n} \r\n\r\nconst mapStateToProps = (store) => {\r\n    console.log(store)\r\n    return {\r\n        data: store.entityReducer.data \r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getCopanyNameList: data => dispatch(getCompanyNameList(data)),\r\n    getContactList: data => dispatch(getSelectedEntityRequest(1))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(index)"],"sourceRoot":""}