{"version":3,"sources":["components/Switch/Switch.js","actions/entityAction.js","components/Company/CompanyForm/CompanyForm.js","views/Pages/Company/Company.js","actions/companyAction.js"],"names":["react_switch__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react_switch__WEBPACK_IMPORTED_MODULE_0___default","n","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","RadioBtn","props","a","createElement","checked","ischeked","onChange","willChange","onColor","onHandleColor","handleDiameter","uncheckedIcon","checkedIcon","boxShadow","activeBoxShadow","height","width","name","className","d","__webpack_exports__","getSelectedEntityRequest","getCompanyNameList","addNewContactRequest","_constants_actionTypes__WEBPACK_IMPORTED_MODULE_0__","entityID","type","types","formData","CompanyForm","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","companyName","companyPhone","companyFax","website","companyAddress","numberOfEmployee","annualRevenue","paymentDetails","createdBy","isActive","crmContactCompanies","crmContactCompanyProjects","industry","activeIndustry","others","it","hospitality","retail","corporate","medical","otherIndustry","handleSubmit","bind","assertThisInitialized","handleInpuChange","getIndustry","setState","e","defineProperty","target","value","event","preventDefault","setform","_React$createElement","_this2","react_default","onSubmit","Row","Col","xs","FormGroup","Input","placeholder","Switch","setIdustryStates","other","id","Button","color","onClick","onAddCompany","React","Component","data","require","columns","label","field","sort","align","rows","created","lastUpdate","adminId","action","Company","dropdownOpen","Array","fill","test","states","tableData","modal","toggle","modalToggle","onSubmitCompany","i","newArray","map","element","index","formDetails","addCompany","getEntities","sm","Card","CardHeader","size","outline","CardBody","mdbreact_esm","striped","bordered","hover","companyData","list","row","push","Modal","isOpen","ModalHeader","ModalBody","Company_CompanyForm_CompanyForm","connect","store","entityReducer","dispatch","companyDetails"],"mappings":"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","file":"static/js/7.2059a833.chunk.js","sourcesContent":["import Switch  from \"react-switch\";\r\nimport React from 'react'\r\n\r\nconst RadioBtn = (props) => {\r\n  return (\r\n    <Switch\r\n      checked={props.ischeked}\r\n      onChange={props.willChange}\r\n      onColor=\"#86d3ff\"\r\n      onHandleColor=\"#2693e6\"\r\n      handleDiameter={30}\r\n      uncheckedIcon={false}\r\n      checkedIcon={false}\r\n      boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n      activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n      height={20}\r\n      width={48}\r\n      name={props.RadioBtn}\r\n      className=\"react-switch crm-switch\"\r\n    />\r\n  )\r\n}\r\n\r\nexport default RadioBtn","import * as types from '../constants/actionTypes';\r\n\r\nexport const getSelectedEntityRequest = (entityID) => ({\r\n    type: types.GET_ENTITY_REQUEST,\r\n    entityID\r\n});\r\n\r\nexport const getCompanyNameList = (entityID) => ({\r\n    type: types.GET_NAME_LIST_REQUEST,\r\n    entityID\r\n});\r\n\r\nexport const addNewContactRequest = (formData) => ({\r\n    type: types.ADD_CONTACT_REQUEST,\r\n    formData\r\n})","\r\nimport React from 'react'\r\nimport RadioBtn from \"../../Switch/Switch\"\r\nimport {\r\n  Button,\r\n  Col,\r\n  Row,\r\n  FormGroup, Input, \r\n} from 'reactstrap';\r\nimport './Company.scss'\r\nimport { throwStatement } from '@babel/types';\r\n\r\nclass CompanyForm extends React.Component {\r\n\tconstructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      companyName: \"\",\r\n      companyPhone: \"\",\r\n      companyFax: \"\",\r\n      website: \"\",\r\n      companyAddress: \"\",\r\n      numberOfEmployee: 0,\r\n      annualRevenue: 0,\r\n      paymentDetails: \"\",\r\n      createdBy: 0,\r\n      isActive: true,\r\n      crmContactCompanies: [],\r\n      crmContactCompanyProjects: []\r\n    }\r\n  \r\n\r\n    this.industry = {\r\n      activeIndustry: '',\r\n      others: false,\r\n      it: false,\r\n      hospitality: false,\r\n      retail: false,\r\n      corporate: false,\r\n      medical: false,\r\n      otherIndustry: '',\r\n    }\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this)\r\n    this.handleInpuChange = this.handleInpuChange.bind(this)\r\n    this.getIndustry = this.getIndustry.bind(this)\r\n  }\r\n\r\n  updateIndusryStates(){\r\n    this.setState({\r\n      it: 0, \r\n      hospitality: 0, \r\n      retail: 0, \r\n      corporate: 0, \r\n      medical: 0\r\n    })\r\n  }\r\n\r\n  handleInpuChange(e){\r\n    this.setState({[e.target.name]: e.target.value})\r\n  }\r\n\r\n  setIdustryStates(event) {\r\n    // console.log(event)\r\n    this.setState(event)\r\n  }\r\n\r\n  getIndustry(e) {\r\n    this.setState({otherIndustry: e.target.value})\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault()\r\n    // create restrictions in the future\r\n    this.props.setform(this.state)\r\n  }\r\n\r\n  render() {\r\n\t  return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <Row>\r\n              <Col xs=\"12\">\r\n                  <FormGroup>\r\n                      <Input \r\n                        type=\"text\" \r\n                        name=\"companyName\" \r\n                        onChange={this.handleInpuChange} \r\n                        value={this.state.companyName} \r\n                        onChange={this.handleInpuChange} \r\n                        placeholder=\"Company Name\" \r\n                      />\r\n                  </FormGroup>\r\n              </Col>\r\n              <Col xs=\"6\">\r\n                  <FormGroup>\r\n                      <Input \r\n                        type=\"text\" \r\n                        name=\"companyPhone\" \r\n                        onChange={this.handleInpuChange} \r\n                        value ={this.state.companyPhone} \r\n                        placeholder=\"Companny Phone\" \r\n                      />\r\n                  </FormGroup>\r\n              </Col>\r\n              <Col xs=\"6\">\r\n                  <FormGroup>\r\n                      <Input \r\n                        type=\"text\" \r\n                        name=\"companyFax\"  \r\n                        onChange={this.handleInpuChange} \r\n                        value={this.state.companyFax}\r\n                        placeholder=\"Company Fox\" \r\n                      />\r\n                  </FormGroup>\r\n              </Col>\r\n              <Col xs=\"12\">\r\n                  <FormGroup>\r\n                      <Input \r\n                        type=\"text\" \r\n                        name=\"website\" \r\n                        onChange={this.handleInpuChange} \r\n                        value={this.state.website} \r\n                        placeholder=\"Website\" \r\n                      />\r\n                  </FormGroup>\r\n              </Col>\r\n              <Col xs=\"12\">\r\n                  <FormGroup>\r\n                      <Input \r\n                        type=\"text\" \r\n                        name=\"companyAddress\" \r\n                        onChange={this.handleInpuChange} \r\n                        value={this.state.companyAddress} \r\n                        placeholder=\"Company Address\" \r\n                      />\r\n                  </FormGroup>\r\n              </Col>\r\n              <Col xs=\"6\">\r\n                  <FormGroup>\r\n                      <Input \r\n                        type=\"number\" \r\n                        name=\"numberOfEmployee\" \r\n                        onChange={this.handleInpuChange} \r\n                        value={this.state.numberOfEmployee} \r\n                        placeholder=\"number of employee\" \r\n                      />\r\n                  </FormGroup>\r\n              </Col>                    \r\n          </Row>\r\n          <Row>\r\n              <Col xs={12}>\r\n                  <div className=\"form-group\">\r\n                      <h4> Industry </h4>\r\n                      <div  className=\"row\">\r\n                          <div className=\"col-md-6\">\r\n                              <div className=\"form-group\">\r\n                              <RadioBtn \r\n                                  ischeked={this.industry.it} \r\n                                  willChange={(e) => {this.setIdustryStates({it : !this.industry.it})}}\r\n                              />\r\n                              <span className=\"crm-label\"> IT </span>\r\n                              </div>\r\n                              <div className=\"form-group\">\r\n                              <RadioBtn \r\n                                  ischeked={this.industry.hospitality} \r\n                                  willChange={(e) => {this.setIdustryStates({hospitality : !this.industry.hospitality})}}\r\n                              />\r\n                              <span className=\"crm-label\"> Hospitality </span>\r\n                              </div>\r\n                              <div className=\"form-group\">\r\n                              <RadioBtn \r\n                                  ischeked={this.industry.retail} \r\n                                  willChange={(e) => {this.setIdustryStates({retail : !this.industry.retail})}}\r\n                              />\r\n                              <span className=\"crm-label\"> Retail </span>\r\n                              </div>\r\n                          </div>\r\n                          <div className=\"col-md-6\">\r\n                              <div className=\"form-group\">\r\n                              <RadioBtn \r\n                                  ischeked={this.industry.corporate} \r\n                                  willChange={(e) => {this.setIdustryStates({corporate : !this.industry.corporate})}}\r\n                              />\r\n                              <span className=\"crm-label\"> Corporate </span>\r\n                              </div>\r\n                              <div className=\"form-group\">\r\n                              <RadioBtn \r\n                                  ischeked={this.industry.medical} \r\n                                  willChange={(e) => {this.setIdustryStates({medical : !this.industry.medical})}}\r\n                              />\r\n                              <span className=\"crm-label\"> Medical </span>\r\n                              </div>\r\n                              <div className=\"form-group\">\r\n                              <RadioBtn \r\n                                  ischeked={this.industry.other || false} \r\n                                  willChange={(e) => {this.setIdustryStates({other : !this.industry.other})}}\r\n                              />\r\n                              <span>Other : </span>\r\n                              </div>\r\n                              <div className=\"form-group\">\r\n                              <input \r\n                                  className=\"form-control\" \r\n                                  value={this.industry.otherIndustry}\r\n                                  placeholder=\"Specify the type of industry\" \r\n                                  onChange={this.getIndustry}\r\n                              />\r\n                              </div>\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n              </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs=\"12\">\r\n                <FormGroup>\r\n                    <Input type=\"text\" id=\"name\" placeholder=\"annual revenue\" />\r\n                </FormGroup>\r\n            </Col>\r\n            <Col xs=\"12\">\r\n                <FormGroup>\r\n                    <Input type=\"text\" id=\"name\" placeholder=\"payment details\"/>\r\n                </FormGroup>\r\n            </Col>\r\n            <Col xs=\"12\">\r\n                <FormGroup>\r\n                    <Input type=\"text\" id=\"name\" placeholder=\"created by\"/>\r\n                </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs=\"12\" className=\"text-right\">\r\n              <Button color=\"primary\" className=\"crm-btn\"> Submit </Button>\r\n              <Button color=\"secondary\" className=\"crm-btn\" onClick={this.props.onAddCompany}> Cancel </Button>\r\n            </Col>\r\n          </Row>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CompanyForm;","import React from 'react';\r\nimport { MDBDataTable } from 'mdbreact';\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    Col,\r\n    Row,\r\n    Modal, ModalBody, ModalFooter, ModalHeader,FormGroup, Label, Input, \r\n  } from 'reactstrap';\r\nimport RadioBtn from \"../../../components/Switch/Switch\"\r\nimport Swal from 'sweetalert2'\r\nimport { connect } from \"react-redux\";\r\nimport { getSelectedEntityRequest } from '../../../actions/entityAction';\r\nimport CompanyForm from '../../../components/Company/CompanyForm/CompanyForm'\r\nimport { addCompanyRequestAction, removeCompanyRequestAction, updateCompanyRequest } from '../../../actions/companyAction';\r\n\r\nconst R = require('ramda');\r\nconst data = {\r\n        columns:\r\n            [\r\n                {\r\n                    label: 'Name',\r\n                    field: 'companyName',\r\n                    sort: 'asc',\r\n                    width: 150\r\n                },\r\n                {\r\n                    label: 'Created',\r\n                    field: 'created',\r\n                    sort: 'asc',\r\n                    width: 270\r\n                },\r\n                {\r\n                    label: 'Last update',\r\n                    field: 'lastUpdate',\r\n                    sort: 'asc',\r\n                    width: 200\r\n                },\r\n                {\r\n                    label: 'Company Phone',\r\n                    field: 'companyPhone',\r\n                    sort: 'asc',\r\n                    width: 100\r\n                },\r\n                {\r\n                    label: 'Company Fax',\r\n                    field: 'companyFax',\r\n                    sort: 'asc',\r\n                    width: 150\r\n                },\r\n                {\r\n                    label: 'Website',\r\n                    field: 'website',\r\n                    sort: 'asc',\r\n                    width: 100\r\n                },\r\n                {\r\n                    label: 'Assign to',\r\n                    field: 'adminId',\r\n                    sort: 'asc',\r\n                    width: 100\r\n                },\r\n                {\r\n                    label: '',\r\n                    field: 'action',\r\n                    align: 'center',\r\n                    sort: 'asc',\r\n                    width: 100\r\n                }\r\n            ],\r\n        rows : [\r\n            {\r\n                companyName: '',\r\n                created: '',\r\n                lastUpdate: '',\r\n                companyPhone: '',\r\n                companyFax: '',\r\n                website: '',\r\n                adminId: '',\r\n                action: (\r\n                    <div className=\"form-inline \">\r\n                        <i className=\"fas fa-pencil-alt crm_btn_table\" ></i>  \r\n                        <i className=\"fas fa-trash-alt crm_btn_table\" ></i>  \r\n                    </div>\r\n                )\r\n            },\r\n        ]\r\n    }\r\n\r\nclass Company extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dropdownOpen: new Array(19).fill(false),\r\n            test: this.props.states.tableData,\r\n            modal: false,\r\n            it: false,\r\n            hospitality: false,\r\n            retail: false,\r\n            corporate: false,\r\n            medical: false,\r\n            otherIndustry: '',\r\n        }\r\n\r\n        this.toggle = this.toggle.bind(this);\r\n        this.modalToggle = this.modalToggle.bind(this)\r\n        this.onSubmitCompany = this.onSubmitCompany.bind(this)\r\n    }\r\n    \r\n    toggle(i) {\r\n        const newArray = this.state.dropdownOpen.map((element, index) => { return (index === i ? !element : false); });\r\n        this.setState({\r\n            dropdownOpen: newArray,\r\n        });\r\n    }\r\n\r\n    modalToggle(i){\r\n        this.setState({\r\n            modal: !this.state.modal,\r\n        });\r\n    }\r\n\r\n    onSubmitCompany(formDetails){\r\n        this.props.addCompany(formDetails)\r\n\r\n        this.setState({\r\n            modal: !this.state.modal,\r\n        });\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.props.getEntities(1)\r\n    }\r\n    \r\n    render () {\r\n        const companyData = (props) => {\r\n            const companyData = {\r\n                columns: data.columns,\r\n                rows: data.rows\r\n            }\r\n            let list = [] \r\n            if (props){\r\n                companyData.rows = []\r\n                props.map((row, i) => {\r\n                    if(row){\r\n                        list = {\r\n                            companyName: row.companyName,\r\n                            created: row.website,\r\n                            lastUpdate: row.lastUpdate,\r\n                            companyPhone: row.companyPhone,\r\n                            companyFax: row.companyFax,\r\n                            website: row.website,\r\n                            adminId: row.adminId,\r\n                            action: (\r\n                                <div className=\"form-inline \">\r\n                                    <i className=\"fas fa-pencil-alt crm_btn_table\" ></i>  \r\n                                    <i className=\"fas fa-trash-alt crm_btn_table\" ></i>  \r\n                                </div>\r\n                            )\r\n                        }\r\n                        companyData.rows.push(list)\r\n                    }\r\n                })\r\n                return companyData\r\n            }else{\r\n                return companyData\r\n            }\r\n        }\r\n        \r\n        return (\r\n            \r\n            <div className=\"animated fadeIn\">\r\n                <Row>\r\n                    <Col xs=\"12\" sm=\"12\">\r\n                        <Card>\r\n                        <CardHeader>\r\n                            <strong> Company List</strong>\r\n                            <small> </small>\r\n                            <div className=\"crm-contact-options\"> \r\n                                <div className=\"form-inline\">\r\n                                    <Button size=\"md\" className=\"btn-brand mr-1 mb-1\" onClick={this.modalToggle}><i className=\" fa fa-plus\"></i><span> Add Company </span></Button>\r\n                                    <Button outline className=\"mr-1 mb-1\" color=\"primary\">Export</Button>\r\n                                </div>                            \r\n                            </div>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                            <MDBDataTable\r\n                                striped\r\n                                bordered\r\n                                hover\r\n                                data={ companyData(this.props.states.tableData) }\r\n                            />\r\n                        </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                <Modal isOpen={this.state.modal} toggle={this.modalToggle} className={'modal-md' +this.props.className}>\r\n                   <ModalHeader toggle={this.modalToggle}> New Company </ModalHeader>\r\n                   <ModalBody>\r\n                        <CompanyForm \r\n                            onAddCompany={this.modalToggle} \r\n                            setform={this.onSubmitCompany}\r\n                        />\r\n                   </ModalBody>\r\n                  {/* <ModalFooter>\r\n                    <Button color=\"primary\" onClick={this.modalToggle}> Submit </Button>{' '}\r\n                    <Button color=\"secondary\" onClick={this.modalToggle}> Cancel</Button>\r\n                  </ModalFooter> */}\r\n                </Modal>\r\n            </div> \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (store) => {\r\n    return {\r\n      states: {\r\n        tableData: store.entityReducer.data\r\n      }\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getEntities: data => dispatch(getSelectedEntityRequest(0)),\r\n    addCompany: data => dispatch(addCompanyRequestAction(data))\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Company)","import * as types from '../constants/actionTypes';\r\n\r\nexport const addCompanyRequestAction = (companyDetails) => ({\r\n    type: types.COMPANY_REQUESTED, \r\n    companyDetails\r\n});\r\n\r\nexport const removeCompanyRequestAction = (companyID) => ({\r\n    type: types.REMOVE_ENTITY_REQUEST, \r\n    companyID\r\n});\r\n\r\nexport const updateCompanyRequest = (companyDetails) => ({\r\n    type: types.UPDATE_ENTITY_REQUEST, \r\n    companyDetails\r\n});\r\n\r\n"],"sourceRoot":""}